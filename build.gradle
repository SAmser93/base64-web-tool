buildscript {
	ext {
		springBootVersion = '2.2.4.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'ru.sem'
version = '0.0.1'
sourceCompatibility = 1.8
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
def tomcatFolder = "E:\\apache-tomcat-8.5.51\\webapps"
def warName = 'semBaseDecoder'

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-devtools', version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: springBootVersion
    compile group: 'org.springframework', name: 'spring-context-support', version: '5.2.3.RELEASE'
    compile group: 'org.json', name: 'json', version: '20190722'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-tomcat', version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: springBootVersion
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

//for custom logging
configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

task cleanAll {
    project.delete(files("${buildDir}/libs") {
    })
    project.delete fileTree("$tomcatFolder/"+warName+"-"+version+".war") {
        include '**/*.war'
    }
}

war {
    //baseName = warName
    archiveFileName = warName+".war"
    enabled = true
}

task copyWar(type: Copy) {
    from file("$buildDir/libs/"+warName+".war")
    into file(tomcatFolder)
}